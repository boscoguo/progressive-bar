{"version":3,"sources":["reportWebVitals.ts","components/progressBar/index.tsx","components/progressBarGroup/index.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ProgressBar","progress","index","className","style","width","backgroundColor","ProgressBarGroup","useState","selectedBar","setSelectedBar","progressOne","progressTwo","progressThree","progressGroup","setProgressGroup","progressNum","Object","values","map","p","onChange","e","target","value","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCDDQ,EAA8C,SAAC,GAGrD,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,MASA,OACE,sBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,qBAAf,UAAqCF,EAArC,OACA,qBACEE,UAAU,oBACV,yCAAiCD,GACjCE,MAAO,CACLC,MAAM,GAAD,OAAKJ,GAAY,IAAM,IAAMA,EAA7B,KACLK,gBAdFL,EAAW,GAAKA,EAAW,IACtB,YACEA,EAAW,IACb,WADF,SCLEM,G,MAAmB,WAC9B,MAAsCC,mBAAiB,eAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAA4B,CACpEG,YAAa,EACbC,YAAa,EACbC,cAAe,IAHjB,mBAAOC,EAAP,KAAsBC,EAAtB,KAMMC,EAAcC,OAAOC,OAAOJ,GAkElC,OACE,sBAAKX,UAAU,qBAAf,UACE,oDACCa,EAAYG,KAAI,SAACC,EAAGlB,GAAJ,OACf,cAAC,EAAD,CAAyBD,SAAUmB,EAAGlB,MAAOA,GAA3BA,MAEpB,sBAAKC,UAAU,2BAAf,UACE,yBACEkB,SAAU,SAAAC,GACRZ,EAAeY,EAAEC,OAAOC,QAF5B,UAKE,wBAAQA,MAAM,cAAd,wBACA,wBAAQA,MAAM,cAAd,wBACA,wBAAQA,MAAM,gBAAd,2BAEF,wBAAQC,QAtCgB,WACxBX,EAAcL,IAA2C,GAC3DM,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EACCK,EAAcL,GAA0C,QAI9DK,EAAcL,GAA0C,GACxDK,EAAcL,GAA0C,IAExDM,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EAAc,QAsBjB,iBACA,wBAAQgB,QA7DiB,WACzBX,EAAcL,IAA2C,GAC3DM,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EACCK,EAAcL,GAA0C,QAI9DK,EAAcL,GAA0C,GACxDK,EAAcL,GAA0C,IAExDM,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EAAc,QA6CjB,iBACA,wBAAQgB,QAxEgB,WAC5BV,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EACCK,EAAcL,GAA0C,SAmE1D,iBACA,wBAAQgB,QAnFe,WAC3BV,GAAiB,SAAAD,GACf,OAAO,2BACFA,GADL,kBAEGL,EACCK,EAAcL,GAA0C,SA8E1D,yB,MCjGRiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.fb2b1f4e.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"./style.scss\";\n\ninterface ProgressBarInterface {\n  progress: number;\n  index: number;\n}\n\nexport const ProgressBar: React.FC<ProgressBarInterface> = ({\n  progress,\n  index\n}) => {\n  const getColor = () => {\n    if (progress > 0 && progress < 100) {\n      return \"lightblue\";\n    } else if (progress > 100) {\n      return \"red\";\n    }\n  };\n  return (\n    <div className=\"progress-bar\">\n      <div className=\"progress-bar-label\">{progress}%</div>\n      <div\n        className=\"progress-bar-fill\"\n        data-testid={`progress-bar-div-${index}`}\n        style={{\n          width: `${progress >= 100 ? 100 : progress}%`,\n          backgroundColor: getColor()\n        }}\n      ></div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ProgressBar } from \"../progressBar\";\nimport \"./style.scss\";\n\ntype ProgressGroupType = {\n  progressOne: number;\n  progressTwo: number;\n  progressThree: number;\n};\n\nexport const ProgressBarGroup = () => {\n  const [selectedBar, setSelectedBar] = useState<string>(\"progressOne\");\n  const [progressGroup, setProgressGroup] = useState<ProgressGroupType>({\n    progressOne: 0,\n    progressTwo: 0,\n    progressThree: 0\n  });\n\n  const progressNum = Object.values(progressGroup);\n\n  const handleBtnClickPlusTF = () => {\n    setProgressGroup(progressGroup => {\n      return {\n        ...progressGroup,\n        [selectedBar]:\n          progressGroup[selectedBar as keyof ProgressGroupType] + 25\n      };\n    });\n  };\n\n  const handleBtnClickPlusTen = () => {\n    setProgressGroup(progressGroup => {\n      return {\n        ...progressGroup,\n        [selectedBar]:\n          progressGroup[selectedBar as keyof ProgressGroupType] + 10\n      };\n    });\n  };\n\n  const handleBtnClickMinusTen = () => {\n    if (progressGroup[selectedBar as keyof ProgressGroupType] >= 10) {\n      setProgressGroup(progressGroup => {\n        return {\n          ...progressGroup,\n          [selectedBar]:\n            progressGroup[selectedBar as keyof ProgressGroupType] - 10\n        };\n      });\n    } else if (\n      progressGroup[selectedBar as keyof ProgressGroupType] > 0 &&\n      progressGroup[selectedBar as keyof ProgressGroupType] < 10\n    ) {\n      setProgressGroup(progressGroup => {\n        return {\n          ...progressGroup,\n          [selectedBar]: 0\n        };\n      });\n    }\n  };\n\n  const handleBtnClickMinusTF = () => {\n    if (progressGroup[selectedBar as keyof ProgressGroupType] >= 25) {\n      setProgressGroup(progressGroup => {\n        return {\n          ...progressGroup,\n          [selectedBar]:\n            progressGroup[selectedBar as keyof ProgressGroupType] - 25\n        };\n      });\n    } else if (\n      progressGroup[selectedBar as keyof ProgressGroupType] > 0 &&\n      progressGroup[selectedBar as keyof ProgressGroupType] < 25\n    ) {\n      setProgressGroup(progressGroup => {\n        return {\n          ...progressGroup,\n          [selectedBar]: 0\n        };\n      });\n    }\n  };\n\n  return (\n    <div className=\"progress-bar-group\">\n      <h2>Progress Bars Demo</h2>\n      {progressNum.map((p, index) => (\n        <ProgressBar key={index} progress={p} index={index} />\n      ))}\n      <div className=\"progress-bar-group__btns\">\n        <select\n          onChange={e => {\n            setSelectedBar(e.target.value);\n          }}\n        >\n          <option value=\"progressOne\">#progress1</option>\n          <option value=\"progressTwo\">#progress2</option>\n          <option value=\"progressThree\">#progress3</option>\n        </select>\n        <button onClick={handleBtnClickMinusTF}>-25</button>\n        <button onClick={handleBtnClickMinusTen}>-10</button>\n        <button onClick={handleBtnClickPlusTen}>+10</button>\n        <button onClick={handleBtnClickPlusTF}>+25</button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProgressBarGroup } from \"./components/progressBarGroup\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProgressBarGroup />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}